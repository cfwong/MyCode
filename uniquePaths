    public int uniquePaths(int m, int n) { // for mxn grid
        int x = --m + --n;
        long res = 1;
        if (m*n==0) return 1;
        long t = Math.min(m,n);    
        for (int i=1; i<=t; i++) { // calcuate x permutations with 2 groups (m,n) of equal elements
            res *= x-t+i;
            res /= i;
        }
        return (int) res;
    }


dynamic programming


    public int uniquePaths(int m, int n) {
        int[][] dp = new int[m+1][n+1];
        dp[0][1] = 1;
        for (int i=1; i<=m; i++)
            for (int j=1; j<=n; j++)
                dp[i][j] = dp[i-1][j] + dp[i][j-1];
        return dp[m][n];
    }
