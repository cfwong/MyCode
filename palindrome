Numbers:
1    0
2    1
3    11
4    101
5    111
6    1001
7    1111
8    10001
9    10101
10    11011
11    11111
12    100001
13    101101
14    110011
15    111111
16    1000001


Math M;
int y,m,e;
int mirror2(int n) {
    if (n<2) return 0;
    m += M.log(n)/M.log(2) - 1; // length of half
    y = 1<<m;
    n -= 2*y; // take out high bit
    e = n<y? 0: 1; // even or odd
    m = n |= y; // add back high bit
    for (m/=e<1?2:1; m>0; m/=2)
        n = 2*n+m%2;
    return n;
}
